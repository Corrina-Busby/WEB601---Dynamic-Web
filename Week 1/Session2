Today's class we expand on learning git commands and are taken through some git commands that are commonly used like:

    ~ git branching - lets you build a new branch or timeline of commits
    ~ git checkout -b "NEW branch" - The -b indicates to create a new branch and the same time check out of that branch
    ~ git merge - you can merge your changes back to the master branch
    ~ and reversing changes in git. 
    
Followed by some scenarios that Ali has experienced, for instance, what happens if the one was to merge there work to
the master when a team of developers is all pulling and pushing there work all at once and so on.

We install VS code editor, Ali proceeds to take us through a small tutorial to get us started on what VS code editor 
has to offer.

For the home study, we are to complete the Learn Git Branching tutorials.

I have also learned there are many ways to reverse changes in Git. Similar to committing, reversing changes in Git has 
a low-level component (staging individual files) and a high-level component ( how the changes are actually reversed).

Two ways to undo changes in Git the first is using git reset and the other is using git revert.

Git reset will move a branch backward as if the commit had never taken place.

Resetting works great for local branches on your own machine, but this re-write method doesn't work for remote branches 
that others are using.

To reverse changes and share those reversed changes with others we input the command git revert.

Throughout the week I managed to complete most of the tutorials. Practicing the commands in real life is the next step 
and familiarising myself with git and VS code editor is going to be the next step.

Till next week
